version: 0.2

phases:
  
  pre_build:
    commands:
      # Fetching and setting environment variables from Parameter Store
      - echo "Retrieving parameters from Parameter Store..."
      - export AWS_SSH_KEY=$(aws ssm get-parameter --name "/myapp/AWS_SSH_KEY1" --with-decryption --query "Parameter.Value" --output text)
      - export AWS_USER=$(aws ssm get-parameter --name "/myapp/AWS_USER1" --with-decryption --query "Parameter.Value" --output text)
      - export AWS_HOST=$(aws ssm get-parameter --name "/myapp/AWS_HOST1" --with-decryption --query "Parameter.Value" --output text)
      
      # Save SSH key to a file and set permissions
      - echo "$AWS_SSH_KEY" > /tmp/aws_key.pem
      - chmod 400 /tmp/aws_key.pem
      # Debug: Verify SSH key contents and permissions 
      - echo "SSH key contents:" 
      - cat /tmp/aws_key.pem 
      - echo "SSH key permissions:" 
      - ls -l /tmp/aws_key.pem
      # Add host key to known hosts
      - echo "Adding host key to known hosts..."
      - ssh-keyscan -H $AWS_HOST >> ~/.ssh/known_hosts

  build:
    commands:
      # Use the SSH key for deployment
      - ssh -o StrictHostKeyChecking=no -i /tmp/aws_key.pem $AWS_USER@$AWS_HOST "cd /home/smerger/public_html/Smerger/; git pull origin main"

      #docker compose up --build -d
      #docker image prune -f
      #docker compose logs -f
      
      #- ssh -o StrictHostKeyChecking=no -i /tmp/aws_key.pem $AWS_USER@$AWS_HOST "cd /var/www/html/test; git pull origin main; docker compose up --build -d; docker image prune -f; docker compose logs -f"
